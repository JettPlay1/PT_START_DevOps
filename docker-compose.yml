version: '3.8'
services:
  bot_image:
    build: ./bot
    container_name: bot_image
    env_file:
      - .env
    restart: always
    volumes:
      - ./db/:/var/log/postgresql/

  db_image:
    build: ./db
    container_name: db_image
    restart: always
    ports:
      - ${DB_PORT}:5432
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256\nhost replication ${DB_REPL_USER} 0.0.0.0/0 md5"
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    command: |
      postgres
      -c wal_level=replica 
      -c max_wal_senders=10 
      -c wal_log_hints=on 
      -c max_replication_slots=10
      -c archive_mode=on 
      -c archive_command='cp %p /oracle/pg_data/archive/%f'
      -c log_replication_commands=on
      -c logging_collector=on
      -c log_directory='/var/log/postgresql'
      -c log_filename='postgresql.log'
    volumes:
      - ./db:/var/log/postgresql

  db_repl_image:
    build: ./db_repl
    container_name: db_repl_image
    user: postgres
    restart: always
    ports:
      - ${DB_REPL_PORT}:5432
    environment:
      PGUSER: ${DB_REPL_USER}
      PGPASSWORD: ${DB_REPL_PASSWORD}
    command: |
      bash -c "
      until pg_basebackup --pgdata=/var/lib/postgresql/data -R --slot=replication_slot --host=db_image --port=${DB_PORT}
      do
      echo 'Waiting for primary to connect...'
      sleep 1s
      done
      echo 'Backup done, starting replica...'
      chmod 0700 /var/lib/postgresql/data
      postgres
      "
    depends_on:
      - db_image